/********************************************************************************
** Form generated from reading UI file 'widget.ui'
**
** Created by: Qt User Interface Compiler version 5.15.3
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_WIDGET_H
#define UI_WIDGET_H

#include <QtCore/QVariant>
#include <QtWidgets/QApplication>
#include <QtWidgets/QCheckBox>
#include <QtWidgets/QComboBox>
#include <QtWidgets/QDoubleSpinBox>
#include <QtWidgets/QFrame>
#include <QtWidgets/QGridLayout>
#include <QtWidgets/QGroupBox>
#include <QtWidgets/QLCDNumber>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QPlainTextEdit>
#include <QtWidgets/QProgressBar>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QRadioButton>
#include <QtWidgets/QScrollArea>
#include <QtWidgets/QSlider>
#include <QtWidgets/QSpinBox>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QVBoxLayout>
#include <QtWidgets/QWidget>

QT_BEGIN_NAMESPACE

class Ui_Widget
{
public:
    QVBoxLayout *verticalLayout;
    QScrollArea *scrollArea;
    QWidget *scrollAreaWidgetContents_5;
    QGridLayout *gridLayout;
    QFrame *frame_2;
    QLabel *escStatusLabel;
    QRadioButton *ConnectedButton;
    QFrame *frame;
    QLabel *StatusLabel;
    QPushButton *disconnectButton;
    QComboBox *serialSelectorBox;
    QLabel *label_2;
    QPushButton *sendButton;
    QCheckBox *checkBox_2;
    QCheckBox *OfflineCheckBox;
    QTabWidget *tabWidget;
    QWidget *tab;
    QFrame *fourWayFrame;
    QPushButton *initMotor4;
    QPushButton *initMotor3;
    QPushButton *initMotor1;
    QLabel *connectMotor;
    QPushButton *initMotor2;
    QFrame *eepromFrame;
    QCheckBox *rvCheckBox;
    QCheckBox *biDirectionCheckbox;
    QCheckBox *sinCheckBox;
    QCheckBox *comp_pwmCheckbox;
    QCheckBox *varPWMCheckBox;
    QSlider *timingAdvanceSlider;
    QSlider *motorKVSlider;
    QLabel *timingLabel;
    QLabel *label_5;
    QSlider *motorPolesSlider;
    QLabel *label_4;
    QCheckBox *stuckProtectionBox;
    QSlider *startupPowerSlider;
    QSlider *pwmFreqSlider;
    QLabel *label;
    QLabel *label_3;
    QLCDNumber *timingAdvanceLCD;
    QLCDNumber *motorKVLCD;
    QLCDNumber *motorPolesLCD;
    QLCDNumber *startupPowerLCD;
    QLCDNumber *pwmFreqLCD;
    QCheckBox *brakecheckbox;
    QCheckBox *antiStallBox;
    QSlider *beepVolumeSlider;
    QLCDNumber *beepVolumeLCD;
    QLabel *label_13;
    QCheckBox *thirtymsTelemBox;
    QPushButton *writeEEPROM;
    QLabel *FirmwareNameLabel;
    QLabel *FirmwareVerionsLabel;
    QCheckBox *hallSensorCheckbox;
    QSlider *dragBrakeSlider;
    QSlider *sineStartupSlider;
    QLCDNumber *dragBrakeLCD;
    QLCDNumber *sineRangeLCD;
    QLabel *label_18;
    QLabel *label_19;
    QSlider *sineModePowerSlider;
    QSlider *runningBrakeStrength;
    QLabel *label_20;
    QLabel *label_21;
    QLCDNumber *sineLcd;
    QLCDNumber *runningBrakeLcd;
    QComboBox *signalComboBox;
    QLabel *label_25;
    QCheckBox *AutoTimingButton;
    QCheckBox *disableStickCalibCheckbox;
    QCheckBox *autoPWM;
    QLineEdit *rocLineEdit;
    QLabel *label_31;
    QSlider *maxRocSlider;
    QSlider *minDutySlider;
    QLineEdit *minDutyLineEdit;
    QLabel *label_32;
    QCheckBox *activeBrakeCheckbox;
    QSlider *activeBrakeSlider;
    QLineEdit *activeBrakeLineEdit;
    QLabel *label_36;
    QLabel *label_40;
    QWidget *tab_2;
    QFrame *flashFourwayFrame;
    QPushButton *sendFirstEEPROM;
    QPushButton *writeBinary;
    QPushButton *loadBinary;
    QProgressBar *progressBar;
    QLabel *MotorLabel;
    QLabel *escStatusLabel_2;
    QPushButton *saveConfigButton;
    QLabel *configFileInfo;
    QPushButton *loadConfigButton;
    QFrame *flashMotorsFrame;
    QPushButton *initMotor4_2;
    QPushButton *initMotor3_2;
    QLabel *SelectMotorlabel;
    QPushButton *initMotor1_2;
    QPushButton *initMotor2_2;
    QWidget *tab_3;
    QCheckBox *checkBox;
    QLineEdit *lineEdit;
    QSlider *horizontalSlider;
    QPushButton *endPassthrough;
    QPushButton *passthoughButton;
    QSlider *m1MSPSlider;
    QSlider *m2MSPSlider;
    QSlider *m3MSPSlider;
    QSlider *m4MSPSlider;
    QLabel *label_6;
    QLabel *label_7;
    QLabel *label_8;
    QLabel *label_9;
    QLabel *m1throttle;
    QLabel *m2throttle;
    QLabel *m3throttle;
    QLabel *m4throttle;
    QLabel *allMotorsLabel;
    QWidget *tab_4;
    QFrame *inputservoFrame;
    QSlider *servoLowSlider;
    QSlider *servoDeadBandSlider;
    QSlider *servoHighSlider;
    QLineEdit *lowThresholdLineEdit;
    QSlider *servoNeutralSlider;
    QLineEdit *servoDeadbandLineEdit;
    QLabel *label_12;
    QLabel *label_11;
    QLineEdit *highThresholdLineEdit;
    QLabel *label_10;
    QLineEdit *servoNeuralLineEdit;
    QLabel *label_14;
    QCheckBox *lowVoltageCuttoffBox;
    QSlider *lowVoltageThresholdSlider;
    QLineEdit *lowVoltageLineEdit;
    QCheckBox *rcCarReverse;
    QLabel *label_15;
    QSlider *temperatureSlider;
    QSlider *currentSlider;
    QLineEdit *temperatureLineEdit;
    QLineEdit *currentLineEdit;
    QLabel *label_16;
    QLabel *label_22;
    QPushButton *writeEEPROM_2;
    QSlider *absoluteVoltageSlider;
    QLineEdit *absoluateVoltageLineedit;
    QCheckBox *absoluteVotlageCheckbox;
    QLineEdit *currentLimitPedit;
    QLineEdit *currentLimitIedit;
    QLineEdit *currentLimitDedit;
    QLabel *label_37;
    QLabel *label_38;
    QLabel *label_39;
    QLabel *label_41;
    QFrame *connectFrameInputPage;
    QLabel *label_17;
    QPushButton *initMotor4_3;
    QPushButton *initMotor3_3;
    QPushButton *initMotor1_3;
    QPushButton *initMotor2_3;
    QWidget *tab_5;
    QPushButton *pushButton;
    QPushButton *initMotor1_4;
    QPushButton *initMotor3_4;
    QPushButton *initMotor2_4;
    QPushButton *initMotor4_4;
    QWidget *tab_6;
    QPushButton *uploadMusic;
    QPlainTextEdit *MusicTextEdit;
    QLineEdit *lineEdit_2;
    QLineEdit *lineEdit_3;
    QLineEdit *lineEdit_4;
    QPushButton *writeEEPROM_3;
    QLabel *label_33;
    QLabel *label_34;
    QLabel *label_35;
    QLineEdit *varRPMHIGHTextedit;
    QCheckBox *customFrequencyCheckbox;
    QLineEdit *varPWMLOWTextedit;
    QLabel *label_23;
    QLabel *label_24;
    QLineEdit *varPWMHIGHTextedit;
    QLineEdit *varRPMLOWTextedit;
    QLineEdit *lineEdit_5;
    QLabel *label_27;
    QLabel *label_29;
    QLabel *label_26;
    QLineEdit *lineEdit_6;
    QCheckBox *checkBox_3;
    QLabel *label_30;
    QLineEdit *lineEdit_7;
    QLineEdit *lineEdit_11;
    QLineEdit *lineEdit_12;
    QLineEdit *lineEdit_9;
    QLabel *label_28;
    QLineEdit *lineEdit_8;
    QPushButton *crawler_default_button;
    QPushButton *VerifyFlash;
    QCheckBox *crawlerFlash;
    QWidget *simplefocTab;
    QScrollArea *simplefocScrollArea;
    QWidget *simplefocScrollAreaContents;
    QGroupBox *simplefocEnableGroup;
    QCheckBox *simplefocEnabledCheckbox;
    QLabel *simplefocRebootLabel;
    QGroupBox *simplefocMotorGroup;
    QLabel *polePairsLabel;
    QSpinBox *polePairsSpinBox;
    QLabel *voltageLimitLabel;
    QDoubleSpinBox *voltageLimitSpinBox;
    QLabel *currentLimitLabel;
    QDoubleSpinBox *currentLimitSpinBox;
    QLabel *velocityLimitLabel;
    QSpinBox *velocityLimitSpinBox;
    QGroupBox *simplefocSensorGroup;
    QLabel *sensorTypeLabel;
    QComboBox *sensorTypeComboBox;
    QLabel *sensorRebootLabel;
    QPushButton *simplefocAS5600PWMPresetButton;
    QPushButton *simplefocAS5600AnalogPresetButton;
    QGroupBox *simplefocDShotGroup;
    QLabel *dshotMaxVelLabel;
    QSpinBox *dshotMaxVelSpinBox;
    QLabel *dshotDeadbandLabel;
    QDoubleSpinBox *dshotDeadbandSpinBox;
    QLabel *dshotRangeInfoLabel;
    QGroupBox *simplefocPIDGroup;
    QPushButton *simplefocConservativePIDButton;
    QPushButton *simplefocBalancedPIDButton;
    QPushButton *simplefocAggressivePIDButton;
    QFrame *simplefocControlFrame;
    QPushButton *simplefocReadButton;
    QPushButton *simplefocWriteButton;
    QPushButton *simplefocDefaultsButton;
    QLabel *simplefocStatusLabel;

    void setupUi(QWidget *Widget)
    {
        if (Widget->objectName().isEmpty())
            Widget->setObjectName(QString::fromUtf8("Widget"));
        Widget->resize(908, 611);
        QFont font;
        font.setFamily(QString::fromUtf8("Arial"));
        font.setPointSize(8);
        font.setBold(false);
        Widget->setFont(font);
        verticalLayout = new QVBoxLayout(Widget);
        verticalLayout->setObjectName(QString::fromUtf8("verticalLayout"));
        scrollArea = new QScrollArea(Widget);
        scrollArea->setObjectName(QString::fromUtf8("scrollArea"));
        scrollArea->setWidgetResizable(true);
        scrollAreaWidgetContents_5 = new QWidget();
        scrollAreaWidgetContents_5->setObjectName(QString::fromUtf8("scrollAreaWidgetContents_5"));
        scrollAreaWidgetContents_5->setGeometry(QRect(0, 0, 888, 591));
        gridLayout = new QGridLayout(scrollAreaWidgetContents_5);
        gridLayout->setObjectName(QString::fromUtf8("gridLayout"));
        frame_2 = new QFrame(scrollAreaWidgetContents_5);
        frame_2->setObjectName(QString::fromUtf8("frame_2"));
        QSizePolicy sizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(frame_2->sizePolicy().hasHeightForWidth());
        frame_2->setSizePolicy(sizePolicy);
        frame_2->setMinimumSize(QSize(0, 17));
        frame_2->setFrameShape(QFrame::StyledPanel);
        frame_2->setFrameShadow(QFrame::Raised);
        escStatusLabel = new QLabel(frame_2);
        escStatusLabel->setObjectName(QString::fromUtf8("escStatusLabel"));
        escStatusLabel->setGeometry(QRect(10, 0, 211, 16));
        QFont font1;
        font1.setFamily(QString::fromUtf8("Arial"));
        font1.setPointSize(8);
        font1.setBold(true);
        escStatusLabel->setFont(font1);
        ConnectedButton = new QRadioButton(frame_2);
        ConnectedButton->setObjectName(QString::fromUtf8("ConnectedButton"));
        ConnectedButton->setGeometry(QRect(260, 0, 116, 18));
        ConnectedButton->setIconSize(QSize(16, 16));
        ConnectedButton->setCheckable(false);
        ConnectedButton->setChecked(false);

        gridLayout->addWidget(frame_2, 0, 0, 1, 1);

        frame = new QFrame(scrollAreaWidgetContents_5);
        frame->setObjectName(QString::fromUtf8("frame"));
        QSizePolicy sizePolicy1(QSizePolicy::Preferred, QSizePolicy::Minimum);
        sizePolicy1.setHorizontalStretch(0);
        sizePolicy1.setVerticalStretch(0);
        sizePolicy1.setHeightForWidth(frame->sizePolicy().hasHeightForWidth());
        frame->setSizePolicy(sizePolicy1);
        frame->setMinimumSize(QSize(0, 75));
        frame->setFrameShape(QFrame::StyledPanel);
        frame->setFrameShadow(QFrame::Raised);
        StatusLabel = new QLabel(frame);
        StatusLabel->setObjectName(QString::fromUtf8("StatusLabel"));
        StatusLabel->setGeometry(QRect(5, 60, 231, 16));
        disconnectButton = new QPushButton(frame);
        disconnectButton->setObjectName(QString::fromUtf8("disconnectButton"));
        disconnectButton->setGeometry(QRect(265, 30, 111, 23));
        serialSelectorBox = new QComboBox(frame);
        serialSelectorBox->addItem(QString());
        serialSelectorBox->setObjectName(QString::fromUtf8("serialSelectorBox"));
        serialSelectorBox->setGeometry(QRect(5, 30, 111, 21));
        serialSelectorBox->setEditable(true);
        label_2 = new QLabel(frame);
        label_2->setObjectName(QString::fromUtf8("label_2"));
        label_2->setGeometry(QRect(270, 5, 296, 21));
        sendButton = new QPushButton(frame);
        sendButton->setObjectName(QString::fromUtf8("sendButton"));
        sendButton->setGeometry(QRect(130, 30, 111, 23));
        QPalette palette;
        QBrush brush(QColor(32, 255, 155, 255));
        brush.setStyle(Qt::SolidPattern);
        palette.setBrush(QPalette::Active, QPalette::Button, brush);
        palette.setBrush(QPalette::Inactive, QPalette::Button, brush);
        palette.setBrush(QPalette::Disabled, QPalette::Button, brush);
        sendButton->setPalette(palette);
        checkBox_2 = new QCheckBox(frame);
        checkBox_2->setObjectName(QString::fromUtf8("checkBox_2"));
        checkBox_2->setGeometry(QRect(5, 5, 176, 17));
        OfflineCheckBox = new QCheckBox(frame);
        OfflineCheckBox->setObjectName(QString::fromUtf8("OfflineCheckBox"));
        OfflineCheckBox->setGeometry(QRect(625, 5, 111, 22));
        tabWidget = new QTabWidget(frame);
        tabWidget->setObjectName(QString::fromUtf8("tabWidget"));
        tabWidget->setGeometry(QRect(-5, 80, 861, 445));
        QSizePolicy sizePolicy2(QSizePolicy::Expanding, QSizePolicy::Fixed);
        sizePolicy2.setHorizontalStretch(0);
        sizePolicy2.setVerticalStretch(0);
        sizePolicy2.setHeightForWidth(tabWidget->sizePolicy().hasHeightForWidth());
        tabWidget->setSizePolicy(sizePolicy2);
        tabWidget->setMinimumSize(QSize(0, 445));
        tabWidget->setTabsClosable(false);
        tab = new QWidget();
        tab->setObjectName(QString::fromUtf8("tab"));
        fourWayFrame = new QFrame(tab);
        fourWayFrame->setObjectName(QString::fromUtf8("fourWayFrame"));
        fourWayFrame->setGeometry(QRect(5, 5, 841, 401));
        fourWayFrame->setFrameShape(QFrame::StyledPanel);
        fourWayFrame->setFrameShadow(QFrame::Raised);
        initMotor4 = new QPushButton(fourWayFrame);
        initMotor4->setObjectName(QString::fromUtf8("initMotor4"));
        initMotor4->setGeometry(QRect(300, 10, 31, 23));
        initMotor3 = new QPushButton(fourWayFrame);
        initMotor3->setObjectName(QString::fromUtf8("initMotor3"));
        initMotor3->setGeometry(QRect(270, 10, 31, 23));
        initMotor1 = new QPushButton(fourWayFrame);
        initMotor1->setObjectName(QString::fromUtf8("initMotor1"));
        initMotor1->setGeometry(QRect(210, 10, 31, 23));
        connectMotor = new QLabel(fourWayFrame);
        connectMotor->setObjectName(QString::fromUtf8("connectMotor"));
        connectMotor->setGeometry(QRect(10, 5, 161, 26));
        initMotor2 = new QPushButton(fourWayFrame);
        initMotor2->setObjectName(QString::fromUtf8("initMotor2"));
        initMotor2->setGeometry(QRect(240, 10, 31, 23));
        eepromFrame = new QFrame(fourWayFrame);
        eepromFrame->setObjectName(QString::fromUtf8("eepromFrame"));
        eepromFrame->setGeometry(QRect(0, 45, 841, 366));
        eepromFrame->setFrameShape(QFrame::StyledPanel);
        eepromFrame->setFrameShadow(QFrame::Raised);
        rvCheckBox = new QCheckBox(eepromFrame);
        rvCheckBox->setObjectName(QString::fromUtf8("rvCheckBox"));
        rvCheckBox->setGeometry(QRect(10, 10, 121, 17));
        biDirectionCheckbox = new QCheckBox(eepromFrame);
        biDirectionCheckbox->setObjectName(QString::fromUtf8("biDirectionCheckbox"));
        biDirectionCheckbox->setGeometry(QRect(10, 60, 141, 17));
        sinCheckBox = new QCheckBox(eepromFrame);
        sinCheckBox->setObjectName(QString::fromUtf8("sinCheckBox"));
        sinCheckBox->setGeometry(QRect(10, 215, 131, 17));
        comp_pwmCheckbox = new QCheckBox(eepromFrame);
        comp_pwmCheckbox->setObjectName(QString::fromUtf8("comp_pwmCheckbox"));
        comp_pwmCheckbox->setGeometry(QRect(10, 35, 161, 17));
        varPWMCheckBox = new QCheckBox(eepromFrame);
        varPWMCheckBox->setObjectName(QString::fromUtf8("varPWMCheckBox"));
        varPWMCheckBox->setGeometry(QRect(500, 105, 121, 17));
        timingAdvanceSlider = new QSlider(eepromFrame);
        timingAdvanceSlider->setObjectName(QString::fromUtf8("timingAdvanceSlider"));
        timingAdvanceSlider->setEnabled(true);
        timingAdvanceSlider->setGeometry(QRect(250, 10, 81, 22));
        timingAdvanceSlider->setMinimum(10);
        timingAdvanceSlider->setMaximum(42);
        timingAdvanceSlider->setPageStep(2);
        timingAdvanceSlider->setValue(15);
        timingAdvanceSlider->setOrientation(Qt::Horizontal);
        motorKVSlider = new QSlider(eepromFrame);
        motorKVSlider->setObjectName(QString::fromUtf8("motorKVSlider"));
        motorKVSlider->setEnabled(true);
        motorKVSlider->setGeometry(QRect(250, 40, 81, 22));
        motorKVSlider->setMinimum(0);
        motorKVSlider->setMaximum(255);
        motorKVSlider->setValue(55);
        motorKVSlider->setOrientation(Qt::Horizontal);
        timingLabel = new QLabel(eepromFrame);
        timingLabel->setObjectName(QString::fromUtf8("timingLabel"));
        timingLabel->setGeometry(QRect(340, 10, 91, 16));
        label_5 = new QLabel(eepromFrame);
        label_5->setObjectName(QString::fromUtf8("label_5"));
        label_5->setGeometry(QRect(340, 40, 91, 16));
        motorPolesSlider = new QSlider(eepromFrame);
        motorPolesSlider->setObjectName(QString::fromUtf8("motorPolesSlider"));
        motorPolesSlider->setEnabled(true);
        motorPolesSlider->setGeometry(QRect(250, 70, 81, 22));
        motorPolesSlider->setMinimum(2);
        motorPolesSlider->setMaximum(36);
        motorPolesSlider->setSingleStep(2);
        motorPolesSlider->setValue(14);
        motorPolesSlider->setOrientation(Qt::Horizontal);
        motorPolesSlider->setTickPosition(QSlider::NoTicks);
        motorPolesSlider->setTickInterval(2);
        label_4 = new QLabel(eepromFrame);
        label_4->setObjectName(QString::fromUtf8("label_4"));
        label_4->setGeometry(QRect(340, 70, 81, 16));
        stuckProtectionBox = new QCheckBox(eepromFrame);
        stuckProtectionBox->setObjectName(QString::fromUtf8("stuckProtectionBox"));
        stuckProtectionBox->setGeometry(QRect(10, 85, 161, 17));
        startupPowerSlider = new QSlider(eepromFrame);
        startupPowerSlider->setObjectName(QString::fromUtf8("startupPowerSlider"));
        startupPowerSlider->setGeometry(QRect(250, 100, 81, 22));
        startupPowerSlider->setMinimum(50);
        startupPowerSlider->setMaximum(150);
        startupPowerSlider->setSliderPosition(100);
        startupPowerSlider->setOrientation(Qt::Horizontal);
        pwmFreqSlider = new QSlider(eepromFrame);
        pwmFreqSlider->setObjectName(QString::fromUtf8("pwmFreqSlider"));
        pwmFreqSlider->setGeometry(QRect(250, 130, 81, 22));
        pwmFreqSlider->setMinimum(8);
        pwmFreqSlider->setMaximum(144);
        pwmFreqSlider->setSingleStep(1);
        pwmFreqSlider->setPageStep(24);
        pwmFreqSlider->setValue(24);
        pwmFreqSlider->setOrientation(Qt::Horizontal);
        label = new QLabel(eepromFrame);
        label->setObjectName(QString::fromUtf8("label"));
        label->setGeometry(QRect(340, 100, 91, 16));
        label_3 = new QLabel(eepromFrame);
        label_3->setObjectName(QString::fromUtf8("label_3"));
        label_3->setGeometry(QRect(340, 130, 111, 16));
        timingAdvanceLCD = new QLCDNumber(eepromFrame);
        timingAdvanceLCD->setObjectName(QString::fromUtf8("timingAdvanceLCD"));
        timingAdvanceLCD->setGeometry(QRect(190, 10, 51, 23));
        timingAdvanceLCD->setSmallDecimalPoint(false);
        timingAdvanceLCD->setMode(QLCDNumber::Dec);
        timingAdvanceLCD->setSegmentStyle(QLCDNumber::Flat);
        timingAdvanceLCD->setProperty("intValue", QVariant(15));
        motorKVLCD = new QLCDNumber(eepromFrame);
        motorKVLCD->setObjectName(QString::fromUtf8("motorKVLCD"));
        motorKVLCD->setGeometry(QRect(190, 40, 51, 23));
        motorKVLCD->setSegmentStyle(QLCDNumber::Flat);
        motorKVLCD->setProperty("intValue", QVariant(2200));
        motorPolesLCD = new QLCDNumber(eepromFrame);
        motorPolesLCD->setObjectName(QString::fromUtf8("motorPolesLCD"));
        motorPolesLCD->setGeometry(QRect(190, 70, 51, 23));
        motorPolesLCD->setSegmentStyle(QLCDNumber::Flat);
        motorPolesLCD->setProperty("intValue", QVariant(14));
        startupPowerLCD = new QLCDNumber(eepromFrame);
        startupPowerLCD->setObjectName(QString::fromUtf8("startupPowerLCD"));
        startupPowerLCD->setGeometry(QRect(190, 100, 51, 23));
        startupPowerLCD->setSegmentStyle(QLCDNumber::Flat);
        startupPowerLCD->setProperty("intValue", QVariant(100));
        pwmFreqLCD = new QLCDNumber(eepromFrame);
        pwmFreqLCD->setObjectName(QString::fromUtf8("pwmFreqLCD"));
        pwmFreqLCD->setGeometry(QRect(190, 130, 51, 23));
        pwmFreqLCD->setSegmentStyle(QLCDNumber::Flat);
        pwmFreqLCD->setProperty("intValue", QVariant(24));
        brakecheckbox = new QCheckBox(eepromFrame);
        brakecheckbox->setObjectName(QString::fromUtf8("brakecheckbox"));
        brakecheckbox->setGeometry(QRect(500, 160, 111, 21));
        antiStallBox = new QCheckBox(eepromFrame);
        antiStallBox->setObjectName(QString::fromUtf8("antiStallBox"));
        antiStallBox->setGeometry(QRect(10, 110, 131, 17));
        beepVolumeSlider = new QSlider(eepromFrame);
        beepVolumeSlider->setObjectName(QString::fromUtf8("beepVolumeSlider"));
        beepVolumeSlider->setGeometry(QRect(250, 160, 81, 22));
        beepVolumeSlider->setMaximum(11);
        beepVolumeSlider->setPageStep(1);
        beepVolumeSlider->setValue(5);
        beepVolumeSlider->setOrientation(Qt::Horizontal);
        beepVolumeLCD = new QLCDNumber(eepromFrame);
        beepVolumeLCD->setObjectName(QString::fromUtf8("beepVolumeLCD"));
        beepVolumeLCD->setGeometry(QRect(190, 160, 51, 23));
        beepVolumeLCD->setSegmentStyle(QLCDNumber::Flat);
        beepVolumeLCD->setProperty("intValue", QVariant(5));
        label_13 = new QLabel(eepromFrame);
        label_13->setObjectName(QString::fromUtf8("label_13"));
        label_13->setGeometry(QRect(340, 160, 76, 16));
        thirtymsTelemBox = new QCheckBox(eepromFrame);
        thirtymsTelemBox->setObjectName(QString::fromUtf8("thirtymsTelemBox"));
        thirtymsTelemBox->setGeometry(QRect(10, 135, 116, 17));
        writeEEPROM = new QPushButton(eepromFrame);
        writeEEPROM->setObjectName(QString::fromUtf8("writeEEPROM"));
        writeEEPROM->setEnabled(true);
        writeEEPROM->setGeometry(QRect(0, 325, 121, 31));
        writeEEPROM->setMinimumSize(QSize(121, 0));
        FirmwareNameLabel = new QLabel(eepromFrame);
        FirmwareNameLabel->setObjectName(QString::fromUtf8("FirmwareNameLabel"));
        FirmwareNameLabel->setGeometry(QRect(195, 320, 131, 31));
        FirmwareVerionsLabel = new QLabel(eepromFrame);
        FirmwareVerionsLabel->setObjectName(QString::fromUtf8("FirmwareVerionsLabel"));
        FirmwareVerionsLabel->setGeometry(QRect(355, 320, 81, 31));
        hallSensorCheckbox = new QCheckBox(eepromFrame);
        hallSensorCheckbox->setObjectName(QString::fromUtf8("hallSensorCheckbox"));
        hallSensorCheckbox->setGeometry(QRect(10, 160, 121, 17));
        dragBrakeSlider = new QSlider(eepromFrame);
        dragBrakeSlider->setObjectName(QString::fromUtf8("dragBrakeSlider"));
        dragBrakeSlider->setEnabled(false);
        dragBrakeSlider->setGeometry(QRect(250, 190, 81, 22));
        dragBrakeSlider->setMinimum(1);
        dragBrakeSlider->setMaximum(10);
        dragBrakeSlider->setSingleStep(1);
        dragBrakeSlider->setValue(9);
        dragBrakeSlider->setOrientation(Qt::Horizontal);
        sineStartupSlider = new QSlider(eepromFrame);
        sineStartupSlider->setObjectName(QString::fromUtf8("sineStartupSlider"));
        sineStartupSlider->setGeometry(QRect(250, 220, 81, 22));
        sineStartupSlider->setMinimum(5);
        sineStartupSlider->setMaximum(25);
        sineStartupSlider->setValue(8);
        sineStartupSlider->setOrientation(Qt::Horizontal);
        dragBrakeLCD = new QLCDNumber(eepromFrame);
        dragBrakeLCD->setObjectName(QString::fromUtf8("dragBrakeLCD"));
        dragBrakeLCD->setGeometry(QRect(190, 190, 51, 23));
        dragBrakeLCD->setFont(font);
        dragBrakeLCD->setSegmentStyle(QLCDNumber::Flat);
        dragBrakeLCD->setProperty("intValue", QVariant(10));
        sineRangeLCD = new QLCDNumber(eepromFrame);
        sineRangeLCD->setObjectName(QString::fromUtf8("sineRangeLCD"));
        sineRangeLCD->setGeometry(QRect(190, 220, 51, 23));
        sineRangeLCD->setSegmentStyle(QLCDNumber::Flat);
        sineRangeLCD->setProperty("intValue", QVariant(8));
        label_18 = new QLabel(eepromFrame);
        label_18->setObjectName(QString::fromUtf8("label_18"));
        label_18->setGeometry(QRect(340, 190, 116, 16));
        label_19 = new QLabel(eepromFrame);
        label_19->setObjectName(QString::fromUtf8("label_19"));
        label_19->setGeometry(QRect(340, 220, 101, 16));
        sineModePowerSlider = new QSlider(eepromFrame);
        sineModePowerSlider->setObjectName(QString::fromUtf8("sineModePowerSlider"));
        sineModePowerSlider->setGeometry(QRect(255, 250, 76, 22));
        sineModePowerSlider->setMinimum(1);
        sineModePowerSlider->setMaximum(10);
        sineModePowerSlider->setValue(5);
        sineModePowerSlider->setSliderPosition(5);
        sineModePowerSlider->setOrientation(Qt::Horizontal);
        runningBrakeStrength = new QSlider(eepromFrame);
        runningBrakeStrength->setObjectName(QString::fromUtf8("runningBrakeStrength"));
        runningBrakeStrength->setGeometry(QRect(255, 280, 76, 22));
        runningBrakeStrength->setMinimum(1);
        runningBrakeStrength->setMaximum(10);
        runningBrakeStrength->setOrientation(Qt::Horizontal);
        label_20 = new QLabel(eepromFrame);
        label_20->setObjectName(QString::fromUtf8("label_20"));
        label_20->setGeometry(QRect(340, 250, 96, 16));
        label_21 = new QLabel(eepromFrame);
        label_21->setObjectName(QString::fromUtf8("label_21"));
        label_21->setGeometry(QRect(345, 285, 106, 16));
        sineLcd = new QLCDNumber(eepromFrame);
        sineLcd->setObjectName(QString::fromUtf8("sineLcd"));
        sineLcd->setGeometry(QRect(190, 250, 51, 23));
        sineLcd->setSegmentStyle(QLCDNumber::Flat);
        sineLcd->setProperty("intValue", QVariant(5));
        runningBrakeLcd = new QLCDNumber(eepromFrame);
        runningBrakeLcd->setObjectName(QString::fromUtf8("runningBrakeLcd"));
        runningBrakeLcd->setGeometry(QRect(190, 280, 51, 23));
        runningBrakeLcd->setSegmentStyle(QLCDNumber::Flat);
        runningBrakeLcd->setProperty("intValue", QVariant(10));
        signalComboBox = new QComboBox(eepromFrame);
        signalComboBox->addItem(QString());
        signalComboBox->addItem(QString());
        signalComboBox->addItem(QString());
        signalComboBox->addItem(QString());
        signalComboBox->addItem(QString());
        signalComboBox->setObjectName(QString::fromUtf8("signalComboBox"));
        signalComboBox->setGeometry(QRect(5, 285, 141, 26));
        label_25 = new QLabel(eepromFrame);
        label_25->setObjectName(QString::fromUtf8("label_25"));
        label_25->setGeometry(QRect(10, 260, 76, 20));
        AutoTimingButton = new QCheckBox(eepromFrame);
        AutoTimingButton->setObjectName(QString::fromUtf8("AutoTimingButton"));
        AutoTimingButton->setGeometry(QRect(500, 75, 111, 22));
        disableStickCalibCheckbox = new QCheckBox(eepromFrame);
        disableStickCalibCheckbox->setObjectName(QString::fromUtf8("disableStickCalibCheckbox"));
        disableStickCalibCheckbox->setGeometry(QRect(10, 185, 151, 22));
        autoPWM = new QCheckBox(eepromFrame);
        autoPWM->setObjectName(QString::fromUtf8("autoPWM"));
        autoPWM->setGeometry(QRect(500, 130, 236, 22));
        rocLineEdit = new QLineEdit(eepromFrame);
        rocLineEdit->setObjectName(QString::fromUtf8("rocLineEdit"));
        rocLineEdit->setGeometry(QRect(500, 10, 41, 24));
        label_31 = new QLabel(eepromFrame);
        label_31->setObjectName(QString::fromUtf8("label_31"));
        label_31->setGeometry(QRect(665, 5, 351, 31));
        maxRocSlider = new QSlider(eepromFrame);
        maxRocSlider->setObjectName(QString::fromUtf8("maxRocSlider"));
        maxRocSlider->setGeometry(QRect(545, 10, 111, 22));
        maxRocSlider->setMinimum(1);
        maxRocSlider->setMaximum(200);
        maxRocSlider->setValue(160);
        maxRocSlider->setOrientation(Qt::Horizontal);
        minDutySlider = new QSlider(eepromFrame);
        minDutySlider->setObjectName(QString::fromUtf8("minDutySlider"));
        minDutySlider->setGeometry(QRect(545, 40, 111, 26));
        minDutySlider->setMaximum(50);
        minDutySlider->setValue(2);
        minDutySlider->setOrientation(Qt::Horizontal);
        minDutyLineEdit = new QLineEdit(eepromFrame);
        minDutyLineEdit->setObjectName(QString::fromUtf8("minDutyLineEdit"));
        minDutyLineEdit->setGeometry(QRect(500, 40, 41, 24));
        label_32 = new QLabel(eepromFrame);
        label_32->setObjectName(QString::fromUtf8("label_32"));
        label_32->setGeometry(QRect(665, 45, 171, 16));
        activeBrakeCheckbox = new QCheckBox(eepromFrame);
        activeBrakeCheckbox->setObjectName(QString::fromUtf8("activeBrakeCheckbox"));
        activeBrakeCheckbox->setGeometry(QRect(500, 185, 146, 31));
        activeBrakeSlider = new QSlider(eepromFrame);
        activeBrakeSlider->setObjectName(QString::fromUtf8("activeBrakeSlider"));
        activeBrakeSlider->setEnabled(false);
        activeBrakeSlider->setGeometry(QRect(545, 225, 111, 16));
        activeBrakeSlider->setMaximum(10);
        activeBrakeSlider->setValue(1);
        activeBrakeSlider->setOrientation(Qt::Horizontal);
        activeBrakeLineEdit = new QLineEdit(eepromFrame);
        activeBrakeLineEdit->setObjectName(QString::fromUtf8("activeBrakeLineEdit"));
        activeBrakeLineEdit->setGeometry(QRect(500, 220, 41, 24));
        label_36 = new QLabel(eepromFrame);
        label_36->setObjectName(QString::fromUtf8("label_36"));
        label_36->setGeometry(QRect(665, 225, 151, 16));
        label_40 = new QLabel(eepromFrame);
        label_40->setObjectName(QString::fromUtf8("label_40"));
        label_40->setGeometry(QRect(500, 250, 326, 16));
        tabWidget->addTab(tab, QString());
        tab_2 = new QWidget();
        tab_2->setObjectName(QString::fromUtf8("tab_2"));
        flashFourwayFrame = new QFrame(tab_2);
        flashFourwayFrame->setObjectName(QString::fromUtf8("flashFourwayFrame"));
        flashFourwayFrame->setGeometry(QRect(15, 50, 826, 346));
        flashFourwayFrame->setFrameShape(QFrame::StyledPanel);
        flashFourwayFrame->setFrameShadow(QFrame::Raised);
        sendFirstEEPROM = new QPushButton(flashFourwayFrame);
        sendFirstEEPROM->setObjectName(QString::fromUtf8("sendFirstEEPROM"));
        sendFirstEEPROM->setGeometry(QRect(5, 315, 141, 23));
        writeBinary = new QPushButton(flashFourwayFrame);
        writeBinary->setObjectName(QString::fromUtf8("writeBinary"));
        writeBinary->setGeometry(QRect(115, 130, 101, 23));
        loadBinary = new QPushButton(flashFourwayFrame);
        loadBinary->setObjectName(QString::fromUtf8("loadBinary"));
        loadBinary->setGeometry(QRect(5, 130, 101, 23));
        progressBar = new QProgressBar(flashFourwayFrame);
        progressBar->setObjectName(QString::fromUtf8("progressBar"));
        progressBar->setGeometry(QRect(5, 85, 401, 23));
        progressBar->setValue(0);
        MotorLabel = new QLabel(flashFourwayFrame);
        MotorLabel->setObjectName(QString::fromUtf8("MotorLabel"));
        MotorLabel->setGeometry(QRect(15, 0, 31, 41));
        MotorLabel->setFont(font1);
        escStatusLabel_2 = new QLabel(flashFourwayFrame);
        escStatusLabel_2->setObjectName(QString::fromUtf8("escStatusLabel_2"));
        escStatusLabel_2->setGeometry(QRect(55, 10, 231, 21));
        escStatusLabel_2->setFont(font1);
        saveConfigButton = new QPushButton(flashFourwayFrame);
        saveConfigButton->setObjectName(QString::fromUtf8("saveConfigButton"));
        saveConfigButton->setGeometry(QRect(485, 315, 96, 24));
        configFileInfo = new QLabel(flashFourwayFrame);
        configFileInfo->setObjectName(QString::fromUtf8("configFileInfo"));
        configFileInfo->setGeometry(QRect(490, 295, 321, 16));
        loadConfigButton = new QPushButton(flashFourwayFrame);
        loadConfigButton->setObjectName(QString::fromUtf8("loadConfigButton"));
        loadConfigButton->setGeometry(QRect(595, 315, 101, 24));
        flashMotorsFrame = new QFrame(tab_2);
        flashMotorsFrame->setObjectName(QString::fromUtf8("flashMotorsFrame"));
        flashMotorsFrame->setGeometry(QRect(14, 10, 446, 31));
        flashMotorsFrame->setFrameShape(QFrame::StyledPanel);
        flashMotorsFrame->setFrameShadow(QFrame::Raised);
        initMotor4_2 = new QPushButton(flashMotorsFrame);
        initMotor4_2->setObjectName(QString::fromUtf8("initMotor4_2"));
        initMotor4_2->setGeometry(QRect(210, 5, 31, 23));
        initMotor3_2 = new QPushButton(flashMotorsFrame);
        initMotor3_2->setObjectName(QString::fromUtf8("initMotor3_2"));
        initMotor3_2->setGeometry(QRect(180, 5, 31, 23));
        SelectMotorlabel = new QLabel(flashMotorsFrame);
        SelectMotorlabel->setObjectName(QString::fromUtf8("SelectMotorlabel"));
        SelectMotorlabel->setGeometry(QRect(10, 5, 101, 20));
        initMotor1_2 = new QPushButton(flashMotorsFrame);
        initMotor1_2->setObjectName(QString::fromUtf8("initMotor1_2"));
        initMotor1_2->setGeometry(QRect(120, 5, 31, 23));
        initMotor2_2 = new QPushButton(flashMotorsFrame);
        initMotor2_2->setObjectName(QString::fromUtf8("initMotor2_2"));
        initMotor2_2->setGeometry(QRect(150, 5, 31, 23));
        tabWidget->addTab(tab_2, QString());
        tab_3 = new QWidget();
        tab_3->setObjectName(QString::fromUtf8("tab_3"));
        checkBox = new QCheckBox(tab_3);
        checkBox->setObjectName(QString::fromUtf8("checkBox"));
        checkBox->setGeometry(QRect(20, 20, 171, 17));
        lineEdit = new QLineEdit(tab_3);
        lineEdit->setObjectName(QString::fromUtf8("lineEdit"));
        lineEdit->setGeometry(QRect(270, 50, 51, 21));
        horizontalSlider = new QSlider(tab_3);
        horizontalSlider->setObjectName(QString::fromUtf8("horizontalSlider"));
        horizontalSlider->setGeometry(QRect(30, 80, 381, 22));
        horizontalSlider->setMinimum(1000);
        horizontalSlider->setMaximum(2000);
        horizontalSlider->setSliderPosition(1000);
        horizontalSlider->setOrientation(Qt::Horizontal);
        endPassthrough = new QPushButton(tab_3);
        endPassthrough->setObjectName(QString::fromUtf8("endPassthrough"));
        endPassthrough->setEnabled(true);
        endPassthrough->setGeometry(QRect(170, 320, 121, 23));
        passthoughButton = new QPushButton(tab_3);
        passthoughButton->setObjectName(QString::fromUtf8("passthoughButton"));
        passthoughButton->setGeometry(QRect(310, 320, 121, 23));
        m1MSPSlider = new QSlider(tab_3);
        m1MSPSlider->setObjectName(QString::fromUtf8("m1MSPSlider"));
        m1MSPSlider->setGeometry(QRect(140, 130, 160, 22));
        m1MSPSlider->setMinimum(1000);
        m1MSPSlider->setMaximum(2000);
        m1MSPSlider->setOrientation(Qt::Horizontal);
        m1MSPSlider->setInvertedAppearance(false);
        m2MSPSlider = new QSlider(tab_3);
        m2MSPSlider->setObjectName(QString::fromUtf8("m2MSPSlider"));
        m2MSPSlider->setGeometry(QRect(140, 170, 160, 22));
        m2MSPSlider->setMinimum(1000);
        m2MSPSlider->setMaximum(2000);
        m2MSPSlider->setOrientation(Qt::Horizontal);
        m3MSPSlider = new QSlider(tab_3);
        m3MSPSlider->setObjectName(QString::fromUtf8("m3MSPSlider"));
        m3MSPSlider->setGeometry(QRect(140, 210, 160, 22));
        m3MSPSlider->setMinimum(1000);
        m3MSPSlider->setMaximum(2000);
        m3MSPSlider->setOrientation(Qt::Horizontal);
        m4MSPSlider = new QSlider(tab_3);
        m4MSPSlider->setObjectName(QString::fromUtf8("m4MSPSlider"));
        m4MSPSlider->setGeometry(QRect(140, 250, 160, 22));
        m4MSPSlider->setMinimum(1000);
        m4MSPSlider->setMaximum(2000);
        m4MSPSlider->setOrientation(Qt::Horizontal);
        label_6 = new QLabel(tab_3);
        label_6->setObjectName(QString::fromUtf8("label_6"));
        label_6->setGeometry(QRect(40, 130, 47, 13));
        label_7 = new QLabel(tab_3);
        label_7->setObjectName(QString::fromUtf8("label_7"));
        label_7->setGeometry(QRect(40, 170, 47, 13));
        label_8 = new QLabel(tab_3);
        label_8->setObjectName(QString::fromUtf8("label_8"));
        label_8->setGeometry(QRect(40, 210, 47, 13));
        label_9 = new QLabel(tab_3);
        label_9->setObjectName(QString::fromUtf8("label_9"));
        label_9->setGeometry(QRect(40, 250, 47, 13));
        m1throttle = new QLabel(tab_3);
        m1throttle->setObjectName(QString::fromUtf8("m1throttle"));
        m1throttle->setGeometry(QRect(310, 130, 47, 13));
        m2throttle = new QLabel(tab_3);
        m2throttle->setObjectName(QString::fromUtf8("m2throttle"));
        m2throttle->setGeometry(QRect(310, 170, 47, 13));
        m3throttle = new QLabel(tab_3);
        m3throttle->setObjectName(QString::fromUtf8("m3throttle"));
        m3throttle->setGeometry(QRect(310, 210, 47, 13));
        m4throttle = new QLabel(tab_3);
        m4throttle->setObjectName(QString::fromUtf8("m4throttle"));
        m4throttle->setGeometry(QRect(310, 250, 47, 13));
        allMotorsLabel = new QLabel(tab_3);
        allMotorsLabel->setObjectName(QString::fromUtf8("allMotorsLabel"));
        allMotorsLabel->setGeometry(QRect(190, 50, 61, 20));
        tabWidget->addTab(tab_3, QString());
        tab_4 = new QWidget();
        tab_4->setObjectName(QString::fromUtf8("tab_4"));
        inputservoFrame = new QFrame(tab_4);
        inputservoFrame->setObjectName(QString::fromUtf8("inputservoFrame"));
        inputservoFrame->setGeometry(QRect(25, 35, 806, 376));
        inputservoFrame->setFrameShape(QFrame::StyledPanel);
        inputservoFrame->setFrameShadow(QFrame::Raised);
        servoLowSlider = new QSlider(inputservoFrame);
        servoLowSlider->setObjectName(QString::fromUtf8("servoLowSlider"));
        servoLowSlider->setGeometry(QRect(80, 40, 136, 22));
        servoLowSlider->setMinimum(0);
        servoLowSlider->setMaximum(255);
        servoLowSlider->setValue(0);
        servoLowSlider->setOrientation(Qt::Horizontal);
        servoDeadBandSlider = new QSlider(inputservoFrame);
        servoDeadBandSlider->setObjectName(QString::fromUtf8("servoDeadBandSlider"));
        servoDeadBandSlider->setGeometry(QRect(80, 130, 141, 22));
        servoDeadBandSlider->setMinimum(1);
        servoDeadBandSlider->setMaximum(100);
        servoDeadBandSlider->setValue(1);
        servoDeadBandSlider->setOrientation(Qt::Horizontal);
        servoHighSlider = new QSlider(inputservoFrame);
        servoHighSlider->setObjectName(QString::fromUtf8("servoHighSlider"));
        servoHighSlider->setGeometry(QRect(80, 70, 141, 22));
        servoHighSlider->setMinimum(0);
        servoHighSlider->setMaximum(255);
        servoHighSlider->setValue(0);
        servoHighSlider->setOrientation(Qt::Horizontal);
        lowThresholdLineEdit = new QLineEdit(inputservoFrame);
        lowThresholdLineEdit->setObjectName(QString::fromUtf8("lowThresholdLineEdit"));
        lowThresholdLineEdit->setGeometry(QRect(15, 40, 61, 20));
        servoNeutralSlider = new QSlider(inputservoFrame);
        servoNeutralSlider->setObjectName(QString::fromUtf8("servoNeutralSlider"));
        servoNeutralSlider->setGeometry(QRect(80, 100, 141, 22));
        servoNeutralSlider->setMinimum(0);
        servoNeutralSlider->setMaximum(255);
        servoNeutralSlider->setValue(0);
        servoNeutralSlider->setOrientation(Qt::Horizontal);
        servoDeadbandLineEdit = new QLineEdit(inputservoFrame);
        servoDeadbandLineEdit->setObjectName(QString::fromUtf8("servoDeadbandLineEdit"));
        servoDeadbandLineEdit->setGeometry(QRect(15, 130, 61, 20));
        label_12 = new QLabel(inputservoFrame);
        label_12->setObjectName(QString::fromUtf8("label_12"));
        label_12->setGeometry(QRect(230, 100, 81, 16));
        label_11 = new QLabel(inputservoFrame);
        label_11->setObjectName(QString::fromUtf8("label_11"));
        label_11->setGeometry(QRect(230, 70, 81, 16));
        highThresholdLineEdit = new QLineEdit(inputservoFrame);
        highThresholdLineEdit->setObjectName(QString::fromUtf8("highThresholdLineEdit"));
        highThresholdLineEdit->setGeometry(QRect(15, 70, 61, 20));
        label_10 = new QLabel(inputservoFrame);
        label_10->setObjectName(QString::fromUtf8("label_10"));
        label_10->setGeometry(QRect(230, 40, 81, 16));
        servoNeuralLineEdit = new QLineEdit(inputservoFrame);
        servoNeuralLineEdit->setObjectName(QString::fromUtf8("servoNeuralLineEdit"));
        servoNeuralLineEdit->setGeometry(QRect(15, 100, 61, 20));
        label_14 = new QLabel(inputservoFrame);
        label_14->setObjectName(QString::fromUtf8("label_14"));
        label_14->setGeometry(QRect(230, 130, 96, 16));
        lowVoltageCuttoffBox = new QCheckBox(inputservoFrame);
        lowVoltageCuttoffBox->setObjectName(QString::fromUtf8("lowVoltageCuttoffBox"));
        lowVoltageCuttoffBox->setGeometry(QRect(15, 200, 156, 17));
        lowVoltageCuttoffBox->setCheckable(true);
        lowVoltageThresholdSlider = new QSlider(inputservoFrame);
        lowVoltageThresholdSlider->setObjectName(QString::fromUtf8("lowVoltageThresholdSlider"));
        lowVoltageThresholdSlider->setGeometry(QRect(185, 200, 141, 22));
        lowVoltageThresholdSlider->setMinimum(0);
        lowVoltageThresholdSlider->setMaximum(100);
        lowVoltageThresholdSlider->setValue(0);
        lowVoltageThresholdSlider->setOrientation(Qt::Horizontal);
        lowVoltageLineEdit = new QLineEdit(inputservoFrame);
        lowVoltageLineEdit->setObjectName(QString::fromUtf8("lowVoltageLineEdit"));
        lowVoltageLineEdit->setGeometry(QRect(330, 200, 61, 20));
        rcCarReverse = new QCheckBox(inputservoFrame);
        rcCarReverse->setObjectName(QString::fromUtf8("rcCarReverse"));
        rcCarReverse->setGeometry(QRect(15, 315, 371, 17));
        label_15 = new QLabel(inputservoFrame);
        label_15->setObjectName(QString::fromUtf8("label_15"));
        label_15->setGeometry(QRect(15, 10, 101, 16));
        temperatureSlider = new QSlider(inputservoFrame);
        temperatureSlider->setObjectName(QString::fromUtf8("temperatureSlider"));
        temperatureSlider->setGeometry(QRect(185, 230, 141, 22));
        temperatureSlider->setMinimum(70);
        temperatureSlider->setMaximum(145);
        temperatureSlider->setValue(144);
        temperatureSlider->setOrientation(Qt::Horizontal);
        currentSlider = new QSlider(inputservoFrame);
        currentSlider->setObjectName(QString::fromUtf8("currentSlider"));
        currentSlider->setGeometry(QRect(185, 265, 141, 22));
        currentSlider->setMinimum(1);
        currentSlider->setMaximum(102);
        currentSlider->setValue(101);
        currentSlider->setOrientation(Qt::Horizontal);
        temperatureLineEdit = new QLineEdit(inputservoFrame);
        temperatureLineEdit->setObjectName(QString::fromUtf8("temperatureLineEdit"));
        temperatureLineEdit->setGeometry(QRect(330, 230, 61, 20));
        currentLineEdit = new QLineEdit(inputservoFrame);
        currentLineEdit->setObjectName(QString::fromUtf8("currentLineEdit"));
        currentLineEdit->setGeometry(QRect(330, 265, 61, 20));
        label_16 = new QLabel(inputservoFrame);
        label_16->setObjectName(QString::fromUtf8("label_16"));
        label_16->setGeometry(QRect(20, 235, 126, 16));
        label_22 = new QLabel(inputservoFrame);
        label_22->setObjectName(QString::fromUtf8("label_22"));
        label_22->setGeometry(QRect(20, 270, 121, 16));
        writeEEPROM_2 = new QPushButton(inputservoFrame);
        writeEEPROM_2->setObjectName(QString::fromUtf8("writeEEPROM_2"));
        writeEEPROM_2->setEnabled(true);
        writeEEPROM_2->setGeometry(QRect(0, 345, 121, 31));
        writeEEPROM_2->setMinimumSize(QSize(121, 0));
        absoluteVoltageSlider = new QSlider(inputservoFrame);
        absoluteVoltageSlider->setObjectName(QString::fromUtf8("absoluteVoltageSlider"));
        absoluteVoltageSlider->setGeometry(QRect(185, 170, 136, 16));
        absoluteVoltageSlider->setOrientation(Qt::Horizontal);
        absoluateVoltageLineedit = new QLineEdit(inputservoFrame);
        absoluateVoltageLineedit->setObjectName(QString::fromUtf8("absoluateVoltageLineedit"));
        absoluateVoltageLineedit->setGeometry(QRect(330, 168, 61, 21));
        absoluteVotlageCheckbox = new QCheckBox(inputservoFrame);
        absoluteVotlageCheckbox->setObjectName(QString::fromUtf8("absoluteVotlageCheckbox"));
        absoluteVotlageCheckbox->setGeometry(QRect(15, 170, 161, 22));
        currentLimitPedit = new QLineEdit(inputservoFrame);
        currentLimitPedit->setObjectName(QString::fromUtf8("currentLimitPedit"));
        currentLimitPedit->setGeometry(QRect(465, 40, 66, 24));
        currentLimitIedit = new QLineEdit(inputservoFrame);
        currentLimitIedit->setObjectName(QString::fromUtf8("currentLimitIedit"));
        currentLimitIedit->setGeometry(QRect(465, 75, 66, 24));
        currentLimitDedit = new QLineEdit(inputservoFrame);
        currentLimitDedit->setObjectName(QString::fromUtf8("currentLimitDedit"));
        currentLimitDedit->setGeometry(QRect(465, 110, 66, 24));
        label_37 = new QLabel(inputservoFrame);
        label_37->setObjectName(QString::fromUtf8("label_37"));
        label_37->setGeometry(QRect(545, 45, 116, 16));
        label_38 = new QLabel(inputservoFrame);
        label_38->setObjectName(QString::fromUtf8("label_38"));
        label_38->setGeometry(QRect(545, 80, 91, 16));
        label_39 = new QLabel(inputservoFrame);
        label_39->setObjectName(QString::fromUtf8("label_39"));
        label_39->setGeometry(QRect(545, 115, 101, 16));
        label_41 = new QLabel(inputservoFrame);
        label_41->setObjectName(QString::fromUtf8("label_41"));
        label_41->setGeometry(QRect(465, 15, 161, 16));
        connectFrameInputPage = new QFrame(tab_4);
        connectFrameInputPage->setObjectName(QString::fromUtf8("connectFrameInputPage"));
        connectFrameInputPage->setGeometry(QRect(40, 5, 311, 31));
        connectFrameInputPage->setFrameShape(QFrame::StyledPanel);
        connectFrameInputPage->setFrameShadow(QFrame::Raised);
        label_17 = new QLabel(connectFrameInputPage);
        label_17->setObjectName(QString::fromUtf8("label_17"));
        label_17->setGeometry(QRect(0, 10, 101, 16));
        initMotor4_3 = new QPushButton(connectFrameInputPage);
        initMotor4_3->setObjectName(QString::fromUtf8("initMotor4_3"));
        initMotor4_3->setGeometry(QRect(200, 5, 31, 23));
        initMotor3_3 = new QPushButton(connectFrameInputPage);
        initMotor3_3->setObjectName(QString::fromUtf8("initMotor3_3"));
        initMotor3_3->setGeometry(QRect(170, 5, 31, 23));
        initMotor1_3 = new QPushButton(connectFrameInputPage);
        initMotor1_3->setObjectName(QString::fromUtf8("initMotor1_3"));
        initMotor1_3->setGeometry(QRect(110, 5, 31, 23));
        initMotor2_3 = new QPushButton(connectFrameInputPage);
        initMotor2_3->setObjectName(QString::fromUtf8("initMotor2_3"));
        initMotor2_3->setGeometry(QRect(140, 5, 31, 23));
        tabWidget->addTab(tab_4, QString());
        tab_5 = new QWidget();
        tab_5->setObjectName(QString::fromUtf8("tab_5"));
        pushButton = new QPushButton(tab_5);
        pushButton->setObjectName(QString::fromUtf8("pushButton"));
        pushButton->setGeometry(QRect(10, 380, 75, 23));
        initMotor1_4 = new QPushButton(tab_5);
        initMotor1_4->setObjectName(QString::fromUtf8("initMotor1_4"));
        initMotor1_4->setGeometry(QRect(265, 10, 31, 23));
        initMotor3_4 = new QPushButton(tab_5);
        initMotor3_4->setObjectName(QString::fromUtf8("initMotor3_4"));
        initMotor3_4->setGeometry(QRect(325, 10, 31, 23));
        initMotor2_4 = new QPushButton(tab_5);
        initMotor2_4->setObjectName(QString::fromUtf8("initMotor2_4"));
        initMotor2_4->setGeometry(QRect(295, 10, 31, 23));
        initMotor4_4 = new QPushButton(tab_5);
        initMotor4_4->setObjectName(QString::fromUtf8("initMotor4_4"));
        initMotor4_4->setGeometry(QRect(355, 10, 31, 23));
        tabWidget->addTab(tab_5, QString());
        tab_6 = new QWidget();
        tab_6->setObjectName(QString::fromUtf8("tab_6"));
        uploadMusic = new QPushButton(tab_6);
        uploadMusic->setObjectName(QString::fromUtf8("uploadMusic"));
        uploadMusic->setGeometry(QRect(25, 105, 116, 23));
        MusicTextEdit = new QPlainTextEdit(tab_6);
        MusicTextEdit->setObjectName(QString::fromUtf8("MusicTextEdit"));
        MusicTextEdit->setGeometry(QRect(20, 15, 396, 71));
        lineEdit_2 = new QLineEdit(tab_6);
        lineEdit_2->setObjectName(QString::fromUtf8("lineEdit_2"));
        lineEdit_2->setGeometry(QRect(25, 145, 113, 24));
        lineEdit_3 = new QLineEdit(tab_6);
        lineEdit_3->setObjectName(QString::fromUtf8("lineEdit_3"));
        lineEdit_3->setGeometry(QRect(25, 185, 113, 24));
        lineEdit_4 = new QLineEdit(tab_6);
        lineEdit_4->setObjectName(QString::fromUtf8("lineEdit_4"));
        lineEdit_4->setGeometry(QRect(25, 225, 113, 24));
        writeEEPROM_3 = new QPushButton(tab_6);
        writeEEPROM_3->setObjectName(QString::fromUtf8("writeEEPROM_3"));
        writeEEPROM_3->setEnabled(true);
        writeEEPROM_3->setGeometry(QRect(5, 385, 121, 31));
        writeEEPROM_3->setMinimumSize(QSize(121, 0));
        label_33 = new QLabel(tab_6);
        label_33->setObjectName(QString::fromUtf8("label_33"));
        label_33->setGeometry(QRect(155, 150, 91, 16));
        label_34 = new QLabel(tab_6);
        label_34->setObjectName(QString::fromUtf8("label_34"));
        label_34->setGeometry(QRect(155, 190, 101, 16));
        label_35 = new QLabel(tab_6);
        label_35->setObjectName(QString::fromUtf8("label_35"));
        label_35->setGeometry(QRect(155, 230, 106, 16));
        varRPMHIGHTextedit = new QLineEdit(tab_6);
        varRPMHIGHTextedit->setObjectName(QString::fromUtf8("varRPMHIGHTextedit"));
        varRPMHIGHTextedit->setGeometry(QRect(700, 205, 81, 20));
        customFrequencyCheckbox = new QCheckBox(tab_6);
        customFrequencyCheckbox->setObjectName(QString::fromUtf8("customFrequencyCheckbox"));
        customFrequencyCheckbox->setGeometry(QRect(420, 175, 236, 17));
        varPWMLOWTextedit = new QLineEdit(tab_6);
        varPWMLOWTextedit->setObjectName(QString::fromUtf8("varPWMLOWTextedit"));
        varPWMLOWTextedit->setGeometry(QRect(420, 240, 81, 20));
        label_23 = new QLabel(tab_6);
        label_23->setObjectName(QString::fromUtf8("label_23"));
        label_23->setGeometry(QRect(535, 205, 126, 16));
        label_24 = new QLabel(tab_6);
        label_24->setObjectName(QString::fromUtf8("label_24"));
        label_24->setGeometry(QRect(535, 240, 131, 16));
        varPWMHIGHTextedit = new QLineEdit(tab_6);
        varPWMHIGHTextedit->setObjectName(QString::fromUtf8("varPWMHIGHTextedit"));
        varPWMHIGHTextedit->setGeometry(QRect(700, 240, 81, 20));
        varRPMLOWTextedit = new QLineEdit(tab_6);
        varRPMLOWTextedit->setObjectName(QString::fromUtf8("varRPMLOWTextedit"));
        varRPMLOWTextedit->setGeometry(QRect(420, 205, 81, 20));
        lineEdit_5 = new QLineEdit(tab_6);
        lineEdit_5->setObjectName(QString::fromUtf8("lineEdit_5"));
        lineEdit_5->setGeometry(QRect(340, 300, 76, 20));
        label_27 = new QLabel(tab_6);
        label_27->setObjectName(QString::fromUtf8("label_27"));
        label_27->setGeometry(QRect(465, 340, 136, 16));
        label_29 = new QLabel(tab_6);
        label_29->setObjectName(QString::fromUtf8("label_29"));
        label_29->setGeometry(QRect(555, 390, 61, 16));
        label_26 = new QLabel(tab_6);
        label_26->setObjectName(QString::fromUtf8("label_26"));
        label_26->setGeometry(QRect(450, 305, 151, 16));
        lineEdit_6 = new QLineEdit(tab_6);
        lineEdit_6->setObjectName(QString::fromUtf8("lineEdit_6"));
        lineEdit_6->setGeometry(QRect(340, 385, 71, 20));
        checkBox_3 = new QCheckBox(tab_6);
        checkBox_3->setObjectName(QString::fromUtf8("checkBox_3"));
        checkBox_3->setGeometry(QRect(335, 270, 161, 16));
        label_30 = new QLabel(tab_6);
        label_30->setObjectName(QString::fromUtf8("label_30"));
        label_30->setGeometry(QRect(710, 390, 56, 16));
        lineEdit_7 = new QLineEdit(tab_6);
        lineEdit_7->setObjectName(QString::fromUtf8("lineEdit_7"));
        lineEdit_7->setGeometry(QRect(615, 300, 86, 20));
        lineEdit_11 = new QLineEdit(tab_6);
        lineEdit_11->setObjectName(QString::fromUtf8("lineEdit_11"));
        lineEdit_11->setGeometry(QRect(485, 385, 66, 20));
        lineEdit_12 = new QLineEdit(tab_6);
        lineEdit_12->setObjectName(QString::fromUtf8("lineEdit_12"));
        lineEdit_12->setGeometry(QRect(635, 385, 71, 20));
        lineEdit_9 = new QLineEdit(tab_6);
        lineEdit_9->setObjectName(QString::fromUtf8("lineEdit_9"));
        lineEdit_9->setGeometry(QRect(615, 335, 86, 20));
        label_28 = new QLabel(tab_6);
        label_28->setObjectName(QString::fromUtf8("label_28"));
        label_28->setGeometry(QRect(415, 390, 61, 16));
        lineEdit_8 = new QLineEdit(tab_6);
        lineEdit_8->setObjectName(QString::fromUtf8("lineEdit_8"));
        lineEdit_8->setGeometry(QRect(340, 335, 76, 20));
        crawler_default_button = new QPushButton(tab_6);
        crawler_default_button->setObjectName(QString::fromUtf8("crawler_default_button"));
        crawler_default_button->setGeometry(QRect(30, 270, 121, 23));
        VerifyFlash = new QPushButton(tab_6);
        VerifyFlash->setObjectName(QString::fromUtf8("VerifyFlash"));
        VerifyFlash->setGeometry(QRect(35, 310, 75, 23));
        crawlerFlash = new QCheckBox(tab_6);
        crawlerFlash->setObjectName(QString::fromUtf8("crawlerFlash"));
        crawlerFlash->setGeometry(QRect(30, 345, 206, 17));
        tabWidget->addTab(tab_6, QString());
        simplefocTab = new QWidget();
        simplefocTab->setObjectName(QString::fromUtf8("simplefocTab"));
        simplefocScrollArea = new QScrollArea(simplefocTab);
        simplefocScrollArea->setObjectName(QString::fromUtf8("simplefocScrollArea"));
        simplefocScrollArea->setGeometry(QRect(5, 5, 841, 401));
        simplefocScrollArea->setWidgetResizable(true);
        simplefocScrollAreaContents = new QWidget();
        simplefocScrollAreaContents->setObjectName(QString::fromUtf8("simplefocScrollAreaContents"));
        simplefocScrollAreaContents->setGeometry(QRect(0, 0, 839, 800));
        simplefocEnableGroup = new QGroupBox(simplefocScrollAreaContents);
        simplefocEnableGroup->setObjectName(QString::fromUtf8("simplefocEnableGroup"));
        simplefocEnableGroup->setGeometry(QRect(10, 10, 800, 80));
        simplefocEnabledCheckbox = new QCheckBox(simplefocEnableGroup);
        simplefocEnabledCheckbox->setObjectName(QString::fromUtf8("simplefocEnabledCheckbox"));
        simplefocEnabledCheckbox->setGeometry(QRect(20, 25, 300, 20));
        simplefocRebootLabel = new QLabel(simplefocEnableGroup);
        simplefocRebootLabel->setObjectName(QString::fromUtf8("simplefocRebootLabel"));
        simplefocRebootLabel->setGeometry(QRect(20, 50, 400, 20));
        simplefocMotorGroup = new QGroupBox(simplefocScrollAreaContents);
        simplefocMotorGroup->setObjectName(QString::fromUtf8("simplefocMotorGroup"));
        simplefocMotorGroup->setGeometry(QRect(10, 100, 800, 120));
        polePairsLabel = new QLabel(simplefocMotorGroup);
        polePairsLabel->setObjectName(QString::fromUtf8("polePairsLabel"));
        polePairsLabel->setGeometry(QRect(20, 25, 100, 20));
        polePairsSpinBox = new QSpinBox(simplefocMotorGroup);
        polePairsSpinBox->setObjectName(QString::fromUtf8("polePairsSpinBox"));
        polePairsSpinBox->setGeometry(QRect(130, 25, 80, 20));
        polePairsSpinBox->setMinimum(1);
        polePairsSpinBox->setMaximum(50);
        polePairsSpinBox->setValue(7);
        voltageLimitLabel = new QLabel(simplefocMotorGroup);
        voltageLimitLabel->setObjectName(QString::fromUtf8("voltageLimitLabel"));
        voltageLimitLabel->setGeometry(QRect(250, 25, 100, 20));
        voltageLimitSpinBox = new QDoubleSpinBox(simplefocMotorGroup);
        voltageLimitSpinBox->setObjectName(QString::fromUtf8("voltageLimitSpinBox"));
        voltageLimitSpinBox->setGeometry(QRect(360, 25, 80, 20));
        voltageLimitSpinBox->setDecimals(1);
        voltageLimitSpinBox->setMinimum(0.000000000000000);
        voltageLimitSpinBox->setMaximum(25.500000000000000);
        voltageLimitSpinBox->setValue(12.000000000000000);
        currentLimitLabel = new QLabel(simplefocMotorGroup);
        currentLimitLabel->setObjectName(QString::fromUtf8("currentLimitLabel"));
        currentLimitLabel->setGeometry(QRect(20, 55, 100, 20));
        currentLimitSpinBox = new QDoubleSpinBox(simplefocMotorGroup);
        currentLimitSpinBox->setObjectName(QString::fromUtf8("currentLimitSpinBox"));
        currentLimitSpinBox->setGeometry(QRect(130, 55, 80, 20));
        currentLimitSpinBox->setDecimals(1);
        currentLimitSpinBox->setMinimum(0.000000000000000);
        currentLimitSpinBox->setMaximum(51.000000000000000);
        currentLimitSpinBox->setValue(10.000000000000000);
        velocityLimitLabel = new QLabel(simplefocMotorGroup);
        velocityLimitLabel->setObjectName(QString::fromUtf8("velocityLimitLabel"));
        velocityLimitLabel->setGeometry(QRect(250, 55, 100, 20));
        velocityLimitSpinBox = new QSpinBox(simplefocMotorGroup);
        velocityLimitSpinBox->setObjectName(QString::fromUtf8("velocityLimitSpinBox"));
        velocityLimitSpinBox->setGeometry(QRect(360, 55, 80, 20));
        velocityLimitSpinBox->setMinimum(0);
        velocityLimitSpinBox->setMaximum(2550);
        velocityLimitSpinBox->setValue(1000);
        simplefocSensorGroup = new QGroupBox(simplefocScrollAreaContents);
        simplefocSensorGroup->setObjectName(QString::fromUtf8("simplefocSensorGroup"));
        simplefocSensorGroup->setGeometry(QRect(10, 230, 800, 180));
        sensorTypeLabel = new QLabel(simplefocSensorGroup);
        sensorTypeLabel->setObjectName(QString::fromUtf8("sensorTypeLabel"));
        sensorTypeLabel->setGeometry(QRect(20, 25, 100, 20));
        sensorTypeComboBox = new QComboBox(simplefocSensorGroup);
        sensorTypeComboBox->addItem(QString());
        sensorTypeComboBox->addItem(QString());
        sensorTypeComboBox->setObjectName(QString::fromUtf8("sensorTypeComboBox"));
        sensorTypeComboBox->setGeometry(QRect(130, 25, 100, 20));
        sensorRebootLabel = new QLabel(simplefocSensorGroup);
        sensorRebootLabel->setObjectName(QString::fromUtf8("sensorRebootLabel"));
        sensorRebootLabel->setGeometry(QRect(240, 25, 200, 20));
        simplefocAS5600PWMPresetButton = new QPushButton(simplefocSensorGroup);
        simplefocAS5600PWMPresetButton->setObjectName(QString::fromUtf8("simplefocAS5600PWMPresetButton"));
        simplefocAS5600PWMPresetButton->setGeometry(QRect(20, 145, 150, 25));
        simplefocAS5600AnalogPresetButton = new QPushButton(simplefocSensorGroup);
        simplefocAS5600AnalogPresetButton->setObjectName(QString::fromUtf8("simplefocAS5600AnalogPresetButton"));
        simplefocAS5600AnalogPresetButton->setGeometry(QRect(180, 145, 150, 25));
        simplefocDShotGroup = new QGroupBox(simplefocScrollAreaContents);
        simplefocDShotGroup->setObjectName(QString::fromUtf8("simplefocDShotGroup"));
        simplefocDShotGroup->setGeometry(QRect(10, 420, 800, 120));
        dshotMaxVelLabel = new QLabel(simplefocDShotGroup);
        dshotMaxVelLabel->setObjectName(QString::fromUtf8("dshotMaxVelLabel"));
        dshotMaxVelLabel->setGeometry(QRect(20, 25, 100, 20));
        dshotMaxVelSpinBox = new QSpinBox(simplefocDShotGroup);
        dshotMaxVelSpinBox->setObjectName(QString::fromUtf8("dshotMaxVelSpinBox"));
        dshotMaxVelSpinBox->setGeometry(QRect(130, 25, 80, 20));
        dshotMaxVelSpinBox->setMinimum(0);
        dshotMaxVelSpinBox->setMaximum(65535);
        dshotMaxVelSpinBox->setValue(1500);
        dshotDeadbandLabel = new QLabel(simplefocDShotGroup);
        dshotDeadbandLabel->setObjectName(QString::fromUtf8("dshotDeadbandLabel"));
        dshotDeadbandLabel->setGeometry(QRect(250, 25, 100, 20));
        dshotDeadbandSpinBox = new QDoubleSpinBox(simplefocDShotGroup);
        dshotDeadbandSpinBox->setObjectName(QString::fromUtf8("dshotDeadbandSpinBox"));
        dshotDeadbandSpinBox->setGeometry(QRect(360, 25, 80, 20));
        dshotDeadbandSpinBox->setDecimals(1);
        dshotDeadbandSpinBox->setMinimum(0.000000000000000);
        dshotDeadbandSpinBox->setMaximum(25.500000000000000);
        dshotDeadbandSpinBox->setValue(2.000000000000000);
        dshotRangeInfoLabel = new QLabel(simplefocDShotGroup);
        dshotRangeInfoLabel->setObjectName(QString::fromUtf8("dshotRangeInfoLabel"));
        dshotRangeInfoLabel->setGeometry(QRect(20, 85, 400, 20));
        simplefocPIDGroup = new QGroupBox(simplefocScrollAreaContents);
        simplefocPIDGroup->setObjectName(QString::fromUtf8("simplefocPIDGroup"));
        simplefocPIDGroup->setGeometry(QRect(10, 550, 800, 120));
        simplefocConservativePIDButton = new QPushButton(simplefocPIDGroup);
        simplefocConservativePIDButton->setObjectName(QString::fromUtf8("simplefocConservativePIDButton"));
        simplefocConservativePIDButton->setGeometry(QRect(20, 85, 100, 25));
        simplefocBalancedPIDButton = new QPushButton(simplefocPIDGroup);
        simplefocBalancedPIDButton->setObjectName(QString::fromUtf8("simplefocBalancedPIDButton"));
        simplefocBalancedPIDButton->setGeometry(QRect(130, 85, 100, 25));
        simplefocAggressivePIDButton = new QPushButton(simplefocPIDGroup);
        simplefocAggressivePIDButton->setObjectName(QString::fromUtf8("simplefocAggressivePIDButton"));
        simplefocAggressivePIDButton->setGeometry(QRect(240, 85, 100, 25));
        simplefocControlFrame = new QFrame(simplefocScrollAreaContents);
        simplefocControlFrame->setObjectName(QString::fromUtf8("simplefocControlFrame"));
        simplefocControlFrame->setGeometry(QRect(10, 680, 800, 60));
        simplefocControlFrame->setFrameShape(QFrame::StyledPanel);
        simplefocReadButton = new QPushButton(simplefocControlFrame);
        simplefocReadButton->setObjectName(QString::fromUtf8("simplefocReadButton"));
        simplefocReadButton->setGeometry(QRect(20, 15, 120, 30));
        simplefocWriteButton = new QPushButton(simplefocControlFrame);
        simplefocWriteButton->setObjectName(QString::fromUtf8("simplefocWriteButton"));
        simplefocWriteButton->setGeometry(QRect(150, 15, 120, 30));
        simplefocDefaultsButton = new QPushButton(simplefocControlFrame);
        simplefocDefaultsButton->setObjectName(QString::fromUtf8("simplefocDefaultsButton"));
        simplefocDefaultsButton->setGeometry(QRect(280, 15, 120, 30));
        simplefocStatusLabel = new QLabel(simplefocControlFrame);
        simplefocStatusLabel->setObjectName(QString::fromUtf8("simplefocStatusLabel"));
        simplefocStatusLabel->setGeometry(QRect(420, 20, 350, 20));
        simplefocScrollArea->setWidget(simplefocScrollAreaContents);
        tabWidget->addTab(simplefocTab, QString());

        gridLayout->addWidget(frame, 1, 0, 1, 1);

        scrollArea->setWidget(scrollAreaWidgetContents_5);

        verticalLayout->addWidget(scrollArea);


        retranslateUi(Widget);

        tabWidget->setCurrentIndex(0);


        QMetaObject::connectSlotsByName(Widget);
    } // setupUi

    void retranslateUi(QWidget *Widget)
    {
        Widget->setWindowTitle(QCoreApplication::translate("Widget", "Widget", nullptr));
        escStatusLabel->setText(QCoreApplication::translate("Widget", "Select Serial Port and Connect", nullptr));
        ConnectedButton->setText(QCoreApplication::translate("Widget", "Serial Connected", nullptr));
        StatusLabel->setText(QCoreApplication::translate("Widget", "<html><head/><body><p>Status:</p></body></html>", nullptr));
        disconnectButton->setText(QCoreApplication::translate("Widget", "Close Connection", nullptr));
        serialSelectorBox->setItemText(0, QCoreApplication::translate("Widget", "Serial Port", nullptr));

        serialSelectorBox->setCurrentText(QCoreApplication::translate("Widget", "Serial Port", nullptr));
        label_2->setText(QCoreApplication::translate("Widget", "Serial Port Info", nullptr));
        sendButton->setText(QCoreApplication::translate("Widget", "Connect", nullptr));
        checkBox_2->setText(QCoreApplication::translate("Widget", "USB / Arduino Connect", nullptr));
        OfflineCheckBox->setText(QCoreApplication::translate("Widget", "Offline Mode", nullptr));
        initMotor4->setText(QCoreApplication::translate("Widget", "M4", nullptr));
        initMotor3->setText(QCoreApplication::translate("Widget", "M3", nullptr));
        initMotor1->setText(QCoreApplication::translate("Widget", "M1", nullptr));
        connectMotor->setText(QCoreApplication::translate("Widget", "Connect and Read Settings", nullptr));
        initMotor2->setText(QCoreApplication::translate("Widget", "M2", nullptr));
        rvCheckBox->setText(QCoreApplication::translate("Widget", "Reverse Rotation", nullptr));
        biDirectionCheckbox->setText(QCoreApplication::translate("Widget", "Bi-directional (fwd/rv)", nullptr));
        sinCheckBox->setText(QCoreApplication::translate("Widget", "Sinusoidal Startup", nullptr));
        comp_pwmCheckbox->setText(QCoreApplication::translate("Widget", "Complementary PWM", nullptr));
        varPWMCheckBox->setText(QCoreApplication::translate("Widget", "Variable PWM", nullptr));
        timingLabel->setText(QCoreApplication::translate("Widget", "Timing Advance", nullptr));
        label_5->setText(QCoreApplication::translate("Widget", "Motor KV", nullptr));
        label_4->setText(QCoreApplication::translate("Widget", "Motor Poles", nullptr));
        stuckProtectionBox->setText(QCoreApplication::translate("Widget", "Stuck Rotor Protection", nullptr));
        label->setText(QCoreApplication::translate("Widget", "Startup Power", nullptr));
        label_3->setText(QCoreApplication::translate("Widget", "PWM frequency", nullptr));
        brakecheckbox->setText(QCoreApplication::translate("Widget", "Brake On Stop", nullptr));
        antiStallBox->setText(QCoreApplication::translate("Widget", "Stall Protection", nullptr));
        label_13->setText(QCoreApplication::translate("Widget", "Beep Volume", nullptr));
        thirtymsTelemBox->setText(QCoreApplication::translate("Widget", "30 ms Telemetry", nullptr));
        writeEEPROM->setText(QCoreApplication::translate("Widget", "Save Settings", nullptr));
        FirmwareNameLabel->setText(QCoreApplication::translate("Widget", "TextLabel", nullptr));
        FirmwareVerionsLabel->setText(QCoreApplication::translate("Widget", "TextLabel", nullptr));
        hallSensorCheckbox->setText(QCoreApplication::translate("Widget", "Use Hall Sensors", nullptr));
        label_18->setText(QCoreApplication::translate("Widget", "Brake On Stop Level", nullptr));
        label_19->setText(QCoreApplication::translate("Widget", "Sine Startup Range", nullptr));
        label_20->setText(QCoreApplication::translate("Widget", "Sine Mode Power", nullptr));
        label_21->setText(QCoreApplication::translate("Widget", "Running Brake Level", nullptr));
        signalComboBox->setItemText(0, QCoreApplication::translate("Widget", "AUTO", nullptr));
        signalComboBox->setItemText(1, QCoreApplication::translate("Widget", "Dshot 300 - 600", nullptr));
        signalComboBox->setItemText(2, QCoreApplication::translate("Widget", "Servo 1000-2000us", nullptr));
        signalComboBox->setItemText(3, QCoreApplication::translate("Widget", "Serial", nullptr));
        signalComboBox->setItemText(4, QCoreApplication::translate("Widget", "Betaflight Safe Arming", nullptr));

        label_25->setText(QCoreApplication::translate("Widget", "Signal Type", nullptr));
        AutoTimingButton->setText(QCoreApplication::translate("Widget", "Auto-Timing", nullptr));
        disableStickCalibCheckbox->setText(QCoreApplication::translate("Widget", "Disable Stick Calibration", nullptr));
        autoPWM->setText(QCoreApplication::translate("Widget", "Auto PWM Frequency / By RPM", nullptr));
        rocLineEdit->setText(QCoreApplication::translate("Widget", "16", nullptr));
        label_31->setText(QCoreApplication::translate("Widget", "Throttle Rate of Change, % per ms", nullptr));
        minDutyLineEdit->setText(QCoreApplication::translate("Widget", "2", nullptr));
        label_32->setText(QCoreApplication::translate("Widget", "Minimum duty Cycle, Percent", nullptr));
        activeBrakeCheckbox->setText(QCoreApplication::translate("Widget", "Active Brake On Stop", nullptr));
        activeBrakeLineEdit->setText(QCoreApplication::translate("Widget", "1", nullptr));
        label_36->setText(QCoreApplication::translate("Widget", "Active brake on stop power %", nullptr));
        label_40->setText(QCoreApplication::translate("Widget", "Warning. can damage motors if set too high, use caution", nullptr));
        tabWidget->setTabText(tabWidget->indexOf(tab), QCoreApplication::translate("Widget", "Settings", nullptr));
        sendFirstEEPROM->setText(QCoreApplication::translate("Widget", "Send Default Settings", nullptr));
        writeBinary->setText(QCoreApplication::translate("Widget", "Flash Firmware", nullptr));
        loadBinary->setText(QCoreApplication::translate("Widget", "Load Firmware", nullptr));
        MotorLabel->setText(QCoreApplication::translate("Widget", "M#:", nullptr));
        escStatusLabel_2->setText(QCoreApplication::translate("Widget", "ESC Status : ", nullptr));
        saveConfigButton->setText(QCoreApplication::translate("Widget", "Save Config File", nullptr));
        configFileInfo->setText(QCoreApplication::translate("Widget", "No Config File Loaded", nullptr));
        loadConfigButton->setText(QCoreApplication::translate("Widget", "Load Config File", nullptr));
        initMotor4_2->setText(QCoreApplication::translate("Widget", "M4", nullptr));
        initMotor3_2->setText(QCoreApplication::translate("Widget", "M3", nullptr));
        SelectMotorlabel->setText(QCoreApplication::translate("Widget", "Connect To ESC:", nullptr));
        initMotor1_2->setText(QCoreApplication::translate("Widget", "M1", nullptr));
        initMotor2_2->setText(QCoreApplication::translate("Widget", "M2", nullptr));
        tabWidget->setTabText(tabWidget->indexOf(tab_2), QCoreApplication::translate("Widget", "Flash", nullptr));
        checkBox->setText(QCoreApplication::translate("Widget", "MSP Motor Control", nullptr));
        lineEdit->setText(QCoreApplication::translate("Widget", "1000", nullptr));
        endPassthrough->setText(QCoreApplication::translate("Widget", "Stop Passthrough", nullptr));
        passthoughButton->setText(QCoreApplication::translate("Widget", "Start Passthrough", nullptr));
        label_6->setText(QCoreApplication::translate("Widget", "Motor 1", nullptr));
        label_7->setText(QCoreApplication::translate("Widget", "Motor 2", nullptr));
        label_8->setText(QCoreApplication::translate("Widget", "Motor 3", nullptr));
        label_9->setText(QCoreApplication::translate("Widget", "Motor 4", nullptr));
        m1throttle->setText(QCoreApplication::translate("Widget", "1000", nullptr));
        m2throttle->setText(QCoreApplication::translate("Widget", "1000", nullptr));
        m3throttle->setText(QCoreApplication::translate("Widget", "1000", nullptr));
        m4throttle->setText(QCoreApplication::translate("Widget", "1000", nullptr));
        allMotorsLabel->setText(QCoreApplication::translate("Widget", "All Motors", nullptr));
        tabWidget->setTabText(tabWidget->indexOf(tab_3), QCoreApplication::translate("Widget", "Motor Control", nullptr));
        label_12->setText(QCoreApplication::translate("Widget", "Servo Neutral", nullptr));
        label_11->setText(QCoreApplication::translate("Widget", "High Threshold", nullptr));
        label_10->setText(QCoreApplication::translate("Widget", "Low Threshold", nullptr));
        label_14->setText(QCoreApplication::translate("Widget", "Servo Dead Band", nullptr));
        lowVoltageCuttoffBox->setText(QCoreApplication::translate("Widget", "Low Voltage Cut Off Cell", nullptr));
        rcCarReverse->setText(QCoreApplication::translate("Widget", "Car / Basher type braking double tap to reverse, overrides user settings", nullptr));
        label_15->setText(QCoreApplication::translate("Widget", "Servo Settings", nullptr));
        temperatureLineEdit->setText(QString());
        label_16->setText(QCoreApplication::translate("Widget", "Temperature Limit Celsius", nullptr));
        label_22->setText(QCoreApplication::translate("Widget", "Current Limit Amps", nullptr));
        writeEEPROM_2->setText(QCoreApplication::translate("Widget", "Save Settings", nullptr));
        absoluteVotlageCheckbox->setText(QCoreApplication::translate("Widget", "Absolute Voltage Cut off", nullptr));
        label_37->setText(QCoreApplication::translate("Widget", "Current Limit P", nullptr));
        label_38->setText(QCoreApplication::translate("Widget", "Current Limit I", nullptr));
        label_39->setText(QCoreApplication::translate("Widget", "Current Limit D", nullptr));
        label_41->setText(QCoreApplication::translate("Widget", "Current Limit Pid Control", nullptr));
        label_17->setText(QCoreApplication::translate("Widget", "Connect to ESC", nullptr));
        initMotor4_3->setText(QCoreApplication::translate("Widget", "M4", nullptr));
        initMotor3_3->setText(QCoreApplication::translate("Widget", "M3", nullptr));
        initMotor1_3->setText(QCoreApplication::translate("Widget", "M1", nullptr));
        initMotor2_3->setText(QCoreApplication::translate("Widget", "M2", nullptr));
        tabWidget->setTabText(tabWidget->indexOf(tab_4), QCoreApplication::translate("Widget", "Input", nullptr));
        pushButton->setText(QCoreApplication::translate("Widget", "Activate", nullptr));
        initMotor1_4->setText(QCoreApplication::translate("Widget", "M1", nullptr));
        initMotor3_4->setText(QCoreApplication::translate("Widget", "M3", nullptr));
        initMotor2_4->setText(QCoreApplication::translate("Widget", "M2", nullptr));
        initMotor4_4->setText(QCoreApplication::translate("Widget", "M4", nullptr));
        tabWidget->setTabText(tabWidget->indexOf(tab_5), QCoreApplication::translate("Widget", "Advanced", nullptr));
        uploadMusic->setText(QCoreApplication::translate("Widget", "Up Load Music", nullptr));
        writeEEPROM_3->setText(QCoreApplication::translate("Widget", "Save Settings", nullptr));
        label_33->setText(QCoreApplication::translate("Widget", "RED led 0-255", nullptr));
        label_34->setText(QCoreApplication::translate("Widget", "GREEN led 0-255", nullptr));
        label_35->setText(QCoreApplication::translate("Widget", "BLUE led 0-255", nullptr));
        customFrequencyCheckbox->setText(QCoreApplication::translate("Widget", "PWM frequency Custom Range", nullptr));
        label_23->setText(QCoreApplication::translate("Widget", "LOW ---- RPM -----HIGH", nullptr));
        label_24->setText(QCoreApplication::translate("Widget", "LOW ---- PWM ---- HIGH", nullptr));
        label_27->setText(QCoreApplication::translate("Widget", "LOW--- RPM ---- HIGH", nullptr));
        label_29->setText(QCoreApplication::translate("Widget", "I Gain", nullptr));
        label_26->setText(QCoreApplication::translate("Widget", "LOW ---THROTTLE --- HIGH", nullptr));
        checkBox_3->setText(QCoreApplication::translate("Widget", "Drive By RPM Mode", nullptr));
        label_30->setText(QCoreApplication::translate("Widget", "D Gain", nullptr));
        label_28->setText(QCoreApplication::translate("Widget", "P Gain", nullptr));
        crawler_default_button->setText(QCoreApplication::translate("Widget", "Send Crawler Defaults", nullptr));
        VerifyFlash->setText(QCoreApplication::translate("Widget", "Verify Flash", nullptr));
        crawlerFlash->setText(QCoreApplication::translate("Widget", "Set Crawler defaults when flashing", nullptr));
        tabWidget->setTabText(tabWidget->indexOf(tab_6), QCoreApplication::translate("Widget", "FUTURE", nullptr));
        simplefocEnableGroup->setTitle(QCoreApplication::translate("Widget", "Enable SimpleFOC", nullptr));
        simplefocEnabledCheckbox->setText(QCoreApplication::translate("Widget", "Enable SimpleFOC Mode (Velocity Only)", nullptr));
        simplefocRebootLabel->setText(QCoreApplication::translate("Widget", "\342\232\240\357\270\217  Requires reboot to take effect", nullptr));
        simplefocRebootLabel->setStyleSheet(QCoreApplication::translate("Widget", "color: orange; font-weight: bold;", nullptr));
        simplefocMotorGroup->setTitle(QCoreApplication::translate("Widget", "Motor Configuration", nullptr));
        polePairsLabel->setText(QCoreApplication::translate("Widget", "Pole Pairs:", nullptr));
        voltageLimitLabel->setText(QCoreApplication::translate("Widget", "Voltage Limit:", nullptr));
        voltageLimitSpinBox->setSuffix(QCoreApplication::translate("Widget", " V", nullptr));
        currentLimitLabel->setText(QCoreApplication::translate("Widget", "Current Limit:", nullptr));
        currentLimitSpinBox->setSuffix(QCoreApplication::translate("Widget", " A", nullptr));
        velocityLimitLabel->setText(QCoreApplication::translate("Widget", "Velocity Limit:", nullptr));
        velocityLimitSpinBox->setSuffix(QCoreApplication::translate("Widget", " rad/s", nullptr));
        simplefocSensorGroup->setTitle(QCoreApplication::translate("Widget", "Sensor Configuration", nullptr));
        sensorTypeLabel->setText(QCoreApplication::translate("Widget", "Sensor Type:", nullptr));
        sensorTypeComboBox->setItemText(0, QCoreApplication::translate("Widget", "PWM", nullptr));
        sensorTypeComboBox->setItemText(1, QCoreApplication::translate("Widget", "Analog", nullptr));

        sensorRebootLabel->setText(QCoreApplication::translate("Widget", "\342\232\240\357\270\217  Requires reboot", nullptr));
        sensorRebootLabel->setStyleSheet(QCoreApplication::translate("Widget", "color: orange; font-weight: bold;", nullptr));
        simplefocAS5600PWMPresetButton->setText(QCoreApplication::translate("Widget", "AS5600 PWM Preset", nullptr));
        simplefocAS5600AnalogPresetButton->setText(QCoreApplication::translate("Widget", "AS5600 Analog Preset", nullptr));
        simplefocDShotGroup->setTitle(QCoreApplication::translate("Widget", "DShot Velocity Mapping (1000-2000 range)", nullptr));
        dshotMaxVelLabel->setText(QCoreApplication::translate("Widget", "Max Velocity:", nullptr));
        dshotMaxVelSpinBox->setSuffix(QCoreApplication::translate("Widget", " rad/s", nullptr));
        dshotDeadbandLabel->setText(QCoreApplication::translate("Widget", "Deadband:", nullptr));
        dshotDeadbandSpinBox->setSuffix(QCoreApplication::translate("Widget", " %", nullptr));
        dshotRangeInfoLabel->setText(QCoreApplication::translate("Widget", "DShot Range: 0-1000 (Reserved) | 1000-2000 (Velocity)", nullptr));
        dshotRangeInfoLabel->setStyleSheet(QCoreApplication::translate("Widget", "color: blue; font-style: italic;", nullptr));
        simplefocPIDGroup->setTitle(QCoreApplication::translate("Widget", "PID Tuning", nullptr));
        simplefocConservativePIDButton->setText(QCoreApplication::translate("Widget", "Conservative", nullptr));
        simplefocBalancedPIDButton->setText(QCoreApplication::translate("Widget", "Balanced", nullptr));
        simplefocAggressivePIDButton->setText(QCoreApplication::translate("Widget", "Aggressive", nullptr));
        simplefocReadButton->setText(QCoreApplication::translate("Widget", "Read from ESC", nullptr));
        simplefocWriteButton->setText(QCoreApplication::translate("Widget", "Write to ESC", nullptr));
        simplefocDefaultsButton->setText(QCoreApplication::translate("Widget", "Reset to Defaults", nullptr));
        simplefocStatusLabel->setText(QCoreApplication::translate("Widget", "Ready", nullptr));
        simplefocStatusLabel->setStyleSheet(QCoreApplication::translate("Widget", "color: green;", nullptr));
        tabWidget->setTabText(tabWidget->indexOf(simplefocTab), QCoreApplication::translate("Widget", "SimpleFOC", nullptr));
    } // retranslateUi

};

namespace Ui {
    class Widget: public Ui_Widget {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_WIDGET_H
